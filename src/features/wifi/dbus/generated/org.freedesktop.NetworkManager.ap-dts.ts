import * as DBus from 'dbus-next';

/*
 * Generated by dbus-next interface generator
 * Template: typescript-dts.ts.hbs
 */

/**
 * Service: org.freedesktop.NetworkManager
 * ObjectPath: /org/freedesktop/NetworkManager/Devices/AccessPoint
 * Interface: org.freedesktop.NetworkManager.AccessPoint
 */
export interface AccessPoint extends DBus.ClientInterface {

    /***** Properties *****/

    //@property({ name: 'Flags', signature: 'u', access: ACCESS_READ })
    Flags(): Promise<number>;

    //@property({ name: 'WpaFlags', signature: 'u', access: ACCESS_READ })
    WpaFlags(): Promise<number>;

    //@property({ name: 'RsnFlags', signature: 'u', access: ACCESS_READ })
    RsnFlags(): Promise<number>;

    //@property({ name: 'Ssid', signature: 'ay', access: ACCESS_READ })
    Ssid(): Promise<Buffer>;

    //@property({ name: 'Frequency', signature: 'u', access: ACCESS_READ })
    Frequency(): Promise<number>;

    //@property({ name: 'HwAddress', signature: 's', access: ACCESS_READ })
    HwAddress(): Promise<string>;

    //@property({ name: 'Mode', signature: 'u', access: ACCESS_READ })
    Mode(): Promise<number>;

    //@property({ name: 'MaxBitrate', signature: 'u', access: ACCESS_READ })
    MaxBitrate(): Promise<number>;

    //@property({ name: 'Strength', signature: 'y', access: ACCESS_READ })
    Strength(): Promise<number>;

    //@property({ name: 'LastSeen', signature: 'i', access: ACCESS_READ })
    LastSeen(): Promise<number>;


    /***** Methods *****/


    /***** Signals *****/

}

