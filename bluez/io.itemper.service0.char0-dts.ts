import * as DBus from 'dbus-next';

/*
 * Generated by dbus-next interface generator
 * Template: typescript-dts.ts.hbs
 */

/**
 * Service: io.itemper
 * ObjectPath: /io/itemper/service0/char0
 * Interface: org.bluez.GattCharacteristic1
 */
export interface OrgbluezGattCharacteristic1 extends DBus.ClientInterface {

    /***** Properties *****/

    //@property({ name: 'UUID', signature: 's', access: ACCESS_READ })
    UUID(): Promise<string>;

    //@property({ name: 'Service', signature: 'o', access: ACCESS_READ })
    Service(): Promise<DBus.ObjectPath>;

    //@property({ name: 'Value', signature: 'ay', access: ACCESS_READ })
    Value(): Promise<Buffer>;

    //@property({ name: 'Flags', signature: 'as', access: ACCESS_READ })
    Flags(): Promise<Array<string>>;


    /***** Methods *****/

    //@method({ name: 'ReadValue', inSignature: '', outSignature: 'ay' })
    ReadValue(): Promise<Buffer>;

    //@method({ name: 'WriteValue', inSignature: 'ay', outSignature: '' })
    WriteValue(value: Buffer): Promise<void>;

    //@method({ name: 'StartNotify', inSignature: '', outSignature: '' })
    StartNotify(): Promise<void>;

    //@method({ name: 'StopNotify', inSignature: '', outSignature: '' })
    StopNotify(): Promise<void>;


    /***** Signals *****/

}


