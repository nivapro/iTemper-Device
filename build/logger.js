"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var config_1 = require("./config");
var winston_1 = require("winston");
var combine = winston_1.format.combine, timestamp = winston_1.format.timestamp, printf = winston_1.format.printf, label = winston_1.format.label;
var myFormat = printf(function (_a) {
    var level = _a.level, message = _a.message, label = _a.label, timestamp = _a.timestamp;
    return level + ": " + timestamp + " [" + label + "]: " + message;
});
var config_2 = require("./config");
var trans = {
    file: new winston_1.transports.File({ filename: config_2.ERROR_LOG_FILE, level: config_2.ERROR_LEVEL }),
    console: new (winston_1.transports.Console)(),
};
exports.log = winston_1.createLogger({
    format: combine(timestamp(), label({ label: 'iTemper-device:' + config_1.HOSTNAME }), myFormat),
    exitOnError: false,
    level: config_2.CONSOLE_LEVEL,
    transports: [
        trans.file,
        trans.console,
    ],
});
function setLevel(level) {
    exports.log.transports[1].level = level;
}
exports.setLevel = setLevel;
function getLevel() {
    return exports.log.transports[1].level + '';
}
exports.getLevel = getLevel;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBb0M7QUFFcEMsbUNBQWtFO0FBQzFELElBQUEsa0NBQU8sRUFBRSxzQ0FBUyxFQUFFLGdDQUFNLEVBQUUsOEJBQUssQ0FBWTtBQUVyRCxJQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsVUFBQyxFQUFvQztRQUFsQyxnQkFBSyxFQUFFLG9CQUFPLEVBQUUsZ0JBQUssRUFBRSx3QkFBUztJQUN6RCxPQUFVLEtBQUssVUFBSyxTQUFTLFVBQUssS0FBSyxXQUFNLE9BQVMsQ0FBQztBQUN6RCxDQUFDLENBQUMsQ0FBQztBQUVILG1DQUFzRTtBQUN0RSxJQUFNLEtBQUssR0FBRztJQUNWLElBQUksRUFBRSxJQUFJLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxFQUFFLHVCQUFjLEVBQUUsS0FBSyxFQUFFLG9CQUFXLEVBQUUsQ0FBQztJQUMzRSxPQUFPLEVBQUUsSUFBSSxDQUFDLG9CQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7Q0FDdEMsQ0FBQztBQUVXLFFBQUEsR0FBRyxHQUFZLHNCQUFZLENBQUU7SUFDdEMsTUFBTSxFQUFFLE9BQU8sQ0FBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLENBQUUsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEdBQUcsaUJBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxDQUFDO0lBQ3ZGLFdBQVcsRUFBRSxLQUFLO0lBQ2xCLEtBQUssRUFBRSxzQkFBYTtJQUNwQixVQUFVLEVBQUU7UUFDUixLQUFLLENBQUMsSUFBSTtRQUNWLEtBQUssQ0FBQyxPQUFPO0tBQ2hCO0NBQ0YsQ0FBQyxDQUFDO0FBRUwsa0JBQXlCLEtBQWE7SUFDbEMsV0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ3BDLENBQUM7QUFGRCw0QkFFQztBQUVEO0lBQ0UsT0FBTyxXQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7QUFDdEMsQ0FBQztBQUZELDRCQUVDIiwiZmlsZSI6ImxvZ2dlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhPU1ROQU1FIH0gZnJvbSAnLi9jb25maWcnO1xyXG5cclxuaW1wb3J0IHsgY3JlYXRlTG9nZ2VyLCBmb3JtYXQsIExvZ2dlciwgdHJhbnNwb3J0c30gZnJvbSAnd2luc3Rvbic7XHJcbmNvbnN0IHsgY29tYmluZSwgdGltZXN0YW1wLCBwcmludGYsIGxhYmVsIH0gPSBmb3JtYXQ7XHJcblxyXG5jb25zdCBteUZvcm1hdCA9IHByaW50ZigoeyBsZXZlbCwgbWVzc2FnZSwgbGFiZWwsIHRpbWVzdGFtcCB9KSA9PiB7XHJcbiAgcmV0dXJuIGAke2xldmVsfTogJHt0aW1lc3RhbXB9IFske2xhYmVsfV06ICR7bWVzc2FnZX1gO1xyXG59KTtcclxuXHJcbmltcG9ydCB7IENPTlNPTEVfTEVWRUwsIEVSUk9SX0xFVkVMLCBFUlJPUl9MT0dfRklMRSB9IGZyb20gJy4vY29uZmlnJztcclxuY29uc3QgdHJhbnMgPSB7XHJcbiAgICBmaWxlOiBuZXcgdHJhbnNwb3J0cy5GaWxlKHsgZmlsZW5hbWU6IEVSUk9SX0xPR19GSUxFLCBsZXZlbDogRVJST1JfTEVWRUwgfSksXHJcbiAgICBjb25zb2xlOiBuZXcgKHRyYW5zcG9ydHMuQ29uc29sZSkoKSxcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBsb2c6IExvZ2dlciA9ICBjcmVhdGVMb2dnZXIgKHtcclxuICAgIGZvcm1hdDogY29tYmluZSAodGltZXN0YW1wKCksIGxhYmVsICh7IGxhYmVsOiAnaVRlbXBlci1kZXZpY2U6JyArIEhPU1ROQU1FfSksIG15Rm9ybWF0KSxcclxuICAgIGV4aXRPbkVycm9yOiBmYWxzZSxcclxuICAgIGxldmVsOiBDT05TT0xFX0xFVkVMLFxyXG4gICAgdHJhbnNwb3J0czogW1xyXG4gICAgICAgIHRyYW5zLmZpbGUsXHJcbiAgICAgICAgdHJhbnMuY29uc29sZSxcclxuICAgIF0sXHJcbiAgfSk7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0TGV2ZWwobGV2ZWw6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgbG9nLnRyYW5zcG9ydHNbMV0ubGV2ZWwgPSBsZXZlbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldExldmVsKCk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIGxvZy50cmFuc3BvcnRzWzFdLmxldmVsICsgJyc7XHJcbn1cclxuIl19
