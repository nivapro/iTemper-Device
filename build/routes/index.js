"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var router = express.Router();
var sensor_data_1 = require("../models/sensor-data");
var usb_sensor_manager_1 = require("../models/usb-sensor-manager");
var logger_1 = require("./../logger");
router.get('/', function (_req, res) {
    var sensorLogger = usb_sensor_manager_1.USBSensorManager.getLoggers()
        .find(function (logger) { return logger.getState !== undefined; });
    var data = new sensor_data_1.SensorData();
    if (sensorLogger && sensorLogger.getState()) {
        var sensorData = sensorLogger.getState().getSensorData();
        logger_1.log.debug('--- / get, state: ', sensorLogger.getState());
        logger_1.log.debug('--- / get, data:', sensorData);
        Object.assign(data, sensorData);
    }
    res.render('index', {
        title: 'Temperatur',
        port0: data.getPort(),
        value0: data.getValue(),
        date0: new Date(data.timestamp()).toTimeString(),
    });
});
exports.default = router;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yb3V0ZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQSxpQ0FBb0M7QUFDcEMsSUFBTSxNQUFNLEdBQW1CLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUNoRCxxREFBbUQ7QUFFbkQsbUVBQWdFO0FBRWhFLHNDQUFrQztBQUVsQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxVQUFDLElBQXFCLEVBQUUsR0FBcUI7SUFFekQsSUFBTSxZQUFZLEdBQUcscUNBQWdCLENBQUMsVUFBVSxFQUFFO1NBQzdDLElBQUksQ0FBQyxVQUFBLE1BQU0sSUFBRyxPQUFBLE1BQU0sQ0FBQyxRQUFRLEtBQUssU0FBUyxFQUE3QixDQUE2QixDQUFDLENBQUM7SUFFbEQsSUFBTSxJQUFJLEdBQWUsSUFBSSx3QkFBVSxFQUFFLENBQUM7SUFFMUMsRUFBRSxDQUFDLENBQUMsWUFBWSxJQUFJLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUMsSUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzNELFlBQUcsQ0FBQyxLQUFLLENBQUMsb0JBQW9CLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDekQsWUFBRyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsRUFBQyxVQUFVLENBQUMsQ0FBQztRQUN6QyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBR0QsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUU7UUFDaEIsS0FBSyxFQUFFLFlBQVk7UUFDbkIsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDckIsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDdkIsS0FBSyxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLFlBQVksRUFBRTtLQUNuRCxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQztBQUVILGtCQUFlLE1BQU0sQ0FBQyIsImZpbGUiOiJyb3V0ZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBHRVQgaG9tZSBwYWdlLlxyXG4gKi9cclxuaW1wb3J0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlcjogZXhwcmVzcy5Sb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5pbXBvcnQgeyBTZW5zb3JEYXRhIH0gZnJvbSAnLi4vbW9kZWxzL3NlbnNvci1kYXRhJztcclxuXHJcbmltcG9ydCB7IFVTQlNlbnNvck1hbmFnZXIgfSBmcm9tICcuLi9tb2RlbHMvdXNiLXNlbnNvci1tYW5hZ2VyJztcclxuXHJcbmltcG9ydCB7IGxvZyB9IGZyb20gJy4vLi4vbG9nZ2VyJztcclxuXHJcbnJvdXRlci5nZXQoJy8nLCAoX3JlcTogZXhwcmVzcy5SZXF1ZXN0LCByZXM6IGV4cHJlc3MuUmVzcG9uc2UpID0+IHtcclxuXHJcbiAgICBjb25zdCBzZW5zb3JMb2dnZXIgPSBVU0JTZW5zb3JNYW5hZ2VyLmdldExvZ2dlcnMoKVxyXG4gICAgICAgIC5maW5kKGxvZ2dlcj0+IGxvZ2dlci5nZXRTdGF0ZSAhPT0gdW5kZWZpbmVkKTtcclxuXHJcbiAgICBjb25zdCBkYXRhOiBTZW5zb3JEYXRhID0gbmV3IFNlbnNvckRhdGEoKTtcclxuXHJcbiAgICBpZiAoc2Vuc29yTG9nZ2VyICYmIHNlbnNvckxvZ2dlci5nZXRTdGF0ZSgpKSB7XHJcbiAgICAgICAgY29uc3Qgc2Vuc29yRGF0YSA9IHNlbnNvckxvZ2dlci5nZXRTdGF0ZSgpLmdldFNlbnNvckRhdGEoKTtcclxuICAgICAgICBsb2cuZGVidWcoJy0tLSAvIGdldCwgc3RhdGU6ICcsIHNlbnNvckxvZ2dlci5nZXRTdGF0ZSgpKTtcclxuICAgICAgICBsb2cuZGVidWcoJy0tLSAvIGdldCwgZGF0YTonLHNlbnNvckRhdGEpO1xyXG4gICAgICAgIE9iamVjdC5hc3NpZ24oZGF0YSwgc2Vuc29yRGF0YSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHJlcy5yZW5kZXIoJ2luZGV4Jywge1xyXG4gICAgICAgIHRpdGxlOiAnVGVtcGVyYXR1cicsXHJcbiAgICAgICAgcG9ydDA6IGRhdGEuZ2V0UG9ydCgpLFxyXG4gICAgICAgIHZhbHVlMDogZGF0YS5nZXRWYWx1ZSgpLFxyXG4gICAgICAgIGRhdGUwOiBuZXcgRGF0ZShkYXRhLnRpbWVzdGFtcCgpKS50b1RpbWVTdHJpbmcoKSxcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuIl19
