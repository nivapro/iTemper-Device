"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var cors = require("cors");
var debug = require("debug");
var express = require("express");
var path = require("path");
var api_1 = require("./routes/api");
var index_1 = require("./routes/index");
var usb_sensor_manager_1 = require("./models/usb-sensor-manager");
var app = express();
app.use(cors());
app.options('*', cors());
usb_sensor_manager_1.USBSensorManager.factory();
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');
app.use(express.static(path.join(__dirname, 'public')));
app.use('/', index_1.default);
app.use('/api', api_1.default);
app.use(function (req, res, next) {
    var err = new Error('Not Found at server');
    err['status'] = 404;
    next(err);
});
if (app.get('env') === 'development') {
    app.use(function (err, req, res, next) {
        res.status(err['status'] || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}
app.use(function (err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});
app.set('port', process.env.PORT || 80);
var server = app.listen(app.get('port'), function () {
    debug('Express server listening on port ' + server.address().port);
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQkFBNkI7QUFDN0IsNkJBQWdDO0FBQ2hDLGlDQUFvQztBQUVwQywyQkFBOEI7QUFFOUIsb0NBQXFDO0FBQ3JDLHdDQUF5QztBQUV6QyxrRUFBK0Q7QUFFL0QsSUFBTSxHQUFHLEdBQW9CLE9BQU8sRUFBRSxDQUFDO0FBRXZDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUNoQixHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBRXpCLHFDQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDO0FBRzNCLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDaEQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFFOUIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUV4RCxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxlQUFXLENBQUMsQ0FBQztBQUMxQixHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxhQUFTLENBQUMsQ0FBQztBQUczQixHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJO0lBQzNCLElBQU0sR0FBRyxHQUFVLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDcEQsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDZCxDQUFDLENBQUMsQ0FBQztBQU9ILEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssYUFBYSxDQUFDLENBQUMsQ0FBQztJQUNuQyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQUMsR0FBUSxFQUFFLEdBQVEsRUFBRSxHQUFRLEVBQUUsSUFBUztRQUM1QyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztRQUNqQyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtZQUNoQixPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU87WUFDcEIsS0FBSyxFQUFFLEdBQUc7U0FBQyxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBSUQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFDLEdBQVEsRUFBRSxHQUFRLEVBQUUsR0FBUSxFQUFFLElBQVM7SUFDNUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFO1FBQ2hCLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTztRQUNwQixLQUFLLEVBQUUsRUFBRTtLQUFDLENBQUMsQ0FBQztBQUNwQixDQUFDLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBRXhDLElBQU0sTUFBTSxHQUFnQixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7SUFDcEQsS0FBSyxDQUFDLG1DQUFtQyxHQUFHLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN2RSxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjb3JzIGZyb20gJ2NvcnMnO1xyXG5pbXBvcnQgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpO1xyXG5pbXBvcnQgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuaW1wb3J0ICogYXMgaHR0cCBmcm9tICdodHRwJztcclxuaW1wb3J0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XHJcblxyXG5pbXBvcnQgcm91dGVfYXBpIGZyb20gJy4vcm91dGVzL2FwaSc7XHJcbmltcG9ydCByb3V0ZV9pbmRleCBmcm9tICcuL3JvdXRlcy9pbmRleCc7XHJcblxyXG5pbXBvcnQgeyBVU0JTZW5zb3JNYW5hZ2VyIH0gZnJvbSAnLi9tb2RlbHMvdXNiLXNlbnNvci1tYW5hZ2VyJztcclxuXHJcbmNvbnN0IGFwcDogZXhwcmVzcy5FeHByZXNzID0gZXhwcmVzcygpO1xyXG4vLyBUT0RPOiBDT1JTIGhhcmRlbmluZ1xyXG5hcHAudXNlKGNvcnMoKSk7XHJcbmFwcC5vcHRpb25zKCcqJywgY29ycygpKTtcclxuXHJcblVTQlNlbnNvck1hbmFnZXIuZmFjdG9yeSgpO1xyXG5cclxuLy8gdmlldyBlbmdpbmUgc2V0dXBcclxuYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XHJcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ3B1ZycpO1xyXG5cclxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcclxuXHJcbmFwcC51c2UoJy8nLCByb3V0ZV9pbmRleCk7XHJcbmFwcC51c2UoJy9hcGknLCByb3V0ZV9hcGkpO1xyXG5cclxuLy8gY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcclxuYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgY29uc3QgZXJyOiBFcnJvciA9IG5ldyBFcnJvcignTm90IEZvdW5kIGF0IHNlcnZlcicpO1xyXG4gICAgZXJyWydzdGF0dXMnXSA9IDQwNDtcclxuICAgIG5leHQoZXJyKTtcclxufSk7XHJcblxyXG5cclxuLy8gZXJyb3IgaGFuZGxlcnNcclxuXHJcbi8vIGRldmVsb3BtZW50IGVycm9yIGhhbmRsZXJcclxuLy8gd2lsbCBwcmludCBzdGFja3RyYWNlXHJcbmlmIChhcHAuZ2V0KCdlbnYnKSA9PT0gJ2RldmVsb3BtZW50Jykge1xyXG4gICAgYXBwLnVzZSgoZXJyOiBhbnksIHJlcTogYW55LCByZXM6IGFueSwgbmV4dDogYW55KSA9PiB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyhlcnJbJ3N0YXR1cyddIHx8IDUwMCk7XHJcbiAgICAgICAgcmVzLnJlbmRlcignZXJyb3InLCB7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxyXG4gICAgICAgICAgICBlcnJvcjogZXJyfSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLy8gcHJvZHVjdGlvbiBlcnJvciBoYW5kbGVyXHJcbi8vIG5vIHN0YWNrdHJhY2VzIGxlYWtlZCB0byB1c2VyXHJcbmFwcC51c2UoKGVycjogYW55LCByZXE6IGFueSwgcmVzOiBhbnksIG5leHQ6IGFueSkgPT4ge1xyXG4gICAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XHJcbiAgICByZXMucmVuZGVyKCdlcnJvcicsIHtcclxuICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcclxuICAgICAgICBlcnJvcjoge319KTtcclxufSk7XHJcblxyXG5hcHAuc2V0KCdwb3J0JywgcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MCk7XHJcblxyXG5jb25zdCBzZXJ2ZXI6IGh0dHAuU2VydmVyID0gYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksIGZ1bmN0aW9uKCkge1xyXG4gICAgZGVidWcoJ0V4cHJlc3Mgc2VydmVyIGxpc3RlbmluZyBvbiBwb3J0ICcgKyBzZXJ2ZXIuYWRkcmVzcygpLnBvcnQpO1xyXG59KTtcclxuIl19
