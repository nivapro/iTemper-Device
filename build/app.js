"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var cors = require("cors");
var express = require("express");
var path = require("path");
var api_1 = require("./routes/api");
var index_1 = require("./routes/index");
var settings_1 = require("./routes/settings");
var usb_sensor_manager_1 = require("./models/usb-sensor-manager");
var logger_1 = require("./logger");
var app = express();
app.use(cors());
app.options('*', cors());
app.disable('etag');
usb_sensor_manager_1.USBSensorManager.factory();
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');
app.use(express.static(path.join(__dirname, 'public')));
app.use('/', index_1.default);
app.use('/api', api_1.default);
app.use('/settings', settings_1.default);
app.use(function (req, res, next) {
    var err = new Error('Not Found at server');
    err['status'] = 404;
    next(err);
});
if (app.get('env') === 'development') {
    app.use(function (err, req, res, next) {
        res.status(err['status'] || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}
app.use(function (err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});
app.set('port', process.env.PORT || 80);
var server = app.listen(app.get('port'), function () {
    logger_1.log.info('iTemper listening on port ' + server.address().port);
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,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O0FBQ25FLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNvcnMgZnJvbSAnY29ycyc7XHJcbmltcG9ydCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5pbXBvcnQgKiBhcyBodHRwIGZyb20gJ2h0dHAnO1xyXG5pbXBvcnQgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxuXHJcbmltcG9ydCByb3V0ZV9hcGkgZnJvbSAnLi9yb3V0ZXMvYXBpJztcclxuaW1wb3J0IHJvdXRlX2luZGV4IGZyb20gJy4vcm91dGVzL2luZGV4JztcclxuaW1wb3J0IHJvdXRlX3NldHRpbmdzIGZyb20gJy4vcm91dGVzL3NldHRpbmdzJztcclxuXHJcbmltcG9ydCB7IFVTQlNlbnNvck1hbmFnZXIgfSBmcm9tICcuL21vZGVscy91c2Itc2Vuc29yLW1hbmFnZXInO1xyXG5cclxuaW1wb3J0IHsgbG9nIH0gZnJvbSAnLi9sb2dnZXInO1xyXG5cclxuY29uc3QgYXBwOiBleHByZXNzLkV4cHJlc3MgPSBleHByZXNzKCk7XHJcbi8vIFRPRE86IENPUlMgaGFyZGVuaW5nXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLm9wdGlvbnMoJyonLCBjb3JzKCkpO1xyXG5hcHAuZGlzYWJsZSgnZXRhZycpO1xyXG5cclxuVVNCU2Vuc29yTWFuYWdlci5mYWN0b3J5KCk7XHJcblxyXG4vLyB2aWV3IGVuZ2luZSBzZXR1cFxyXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAncHVnJyk7XHJcblxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xyXG5cclxuYXBwLnVzZSgnLycsIHJvdXRlX2luZGV4KTtcclxuYXBwLnVzZSgnL2FwaScsIHJvdXRlX2FwaSk7XHJcbmFwcC51c2UoJy9zZXR0aW5ncycsIHJvdXRlX3NldHRpbmdzKTtcclxuXHJcbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXHJcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IGVycjogYW55ID0gbmV3IEVycm9yKCdOb3QgRm91bmQgYXQgc2VydmVyJyk7XHJcbiAgICBlcnJbJ3N0YXR1cyddID0gNDA0O1xyXG4gICAgbmV4dChlcnIpO1xyXG59KTtcclxuXHJcblxyXG4vLyBlcnJvciBoYW5kbGVyc1xyXG5cclxuLy8gZGV2ZWxvcG1lbnQgZXJyb3IgaGFuZGxlclxyXG4vLyB3aWxsIHByaW50IHN0YWNrdHJhY2VcclxuaWYgKGFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnKSB7XHJcbiAgICBhcHAudXNlKChlcnI6IGFueSwgcmVxOiBhbnksIHJlczogYW55LCBuZXh0OiBhbnkpID0+IHtcclxuICAgICAgICByZXMuc3RhdHVzKGVyclsnc3RhdHVzJ10gfHwgNTAwKTtcclxuICAgICAgICByZXMucmVuZGVyKCdlcnJvcicsIHtcclxuICAgICAgICAgICAgbWVzc2FnZTogZXJyLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIGVycm9yOiBlcnJ9KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4vLyBwcm9kdWN0aW9uIGVycm9yIGhhbmRsZXJcclxuLy8gbm8gc3RhY2sgdHJhY2VzIGxlYWtlZCB0byB1c2VyXHJcbmFwcC51c2UoKGVycjogYW55LCByZXE6IGFueSwgcmVzOiBhbnksIG5leHQ6IGFueSkgPT4ge1xyXG4gICAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XHJcbiAgICByZXMucmVuZGVyKCdlcnJvcicsIHtcclxuICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcclxuICAgICAgICBlcnJvcjoge319KTtcclxufSk7XHJcblxyXG5hcHAuc2V0KCdwb3J0JywgcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MCk7XHJcblxyXG5jb25zdCBzZXJ2ZXI6IGh0dHAuU2VydmVyID0gYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksIGZ1bmN0aW9uKCkge1xyXG4gICAgbG9nLmluZm8oJ2lUZW1wZXIgbGlzdGVuaW5nIG9uIHBvcnQgJyArIHNlcnZlci5hZGRyZXNzKCkucG9ydCk7XHJcbn0pO1xyXG4iXX0=
