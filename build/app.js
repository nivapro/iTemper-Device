"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var cors = require("cors");
var express = require("express");
var path = require("path");
var api_1 = require("./routes/api");
var index_1 = require("./routes/index");
var settings_1 = require("./routes/settings");
var usb_sensor_manager_1 = require("./models/usb-sensor-manager");
var logger_1 = require("./logger");
var app = express();
app.use(cors());
app.options('*', cors());
app.disable('etag');
usb_sensor_manager_1.USBSensorManager.factory();
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');
app.use(express.static(path.join(__dirname, 'public')));
app.use('/', index_1.default);
app.use('/api', api_1.default);
app.use('/settings', settings_1.default);
app.use(function (req, res, next) {
    var err = new Error('Not Found at server');
    err['status'] = 404;
    next(err);
});
if (app.get('env') === 'development') {
    app.use(function (err, req, res, next) {
        res.status(err['status'] || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}
app.use(function (err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});
app.set('port', process.env.PORT || 80);
var server = app.listen(app.get('port'), function () {
    logger_1.log.info('iTemper listening on port ' + server.address().port);
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,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aWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29ycyBmcm9tICdjb3JzJztcclxuaW1wb3J0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmltcG9ydCAqIGFzIGh0dHAgZnJvbSAnaHR0cCc7XHJcbmltcG9ydCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5cclxuaW1wb3J0IHJvdXRlX2FwaSBmcm9tICcuL3JvdXRlcy9hcGknO1xyXG5pbXBvcnQgcm91dGVfaW5kZXggZnJvbSAnLi9yb3V0ZXMvaW5kZXgnO1xyXG5pbXBvcnQgcm91dGVfc2V0dGluZ3MgZnJvbSAnLi9yb3V0ZXMvc2V0dGluZ3MnO1xyXG5cclxuaW1wb3J0IHsgVVNCU2Vuc29yTWFuYWdlciB9IGZyb20gJy4vbW9kZWxzL3VzYi1zZW5zb3ItbWFuYWdlcic7XHJcblxyXG5pbXBvcnQgeyBsb2cgfSBmcm9tICcuL2xvZ2dlcic7XHJcblxyXG5jb25zdCBhcHA6IGV4cHJlc3MuRXhwcmVzcyA9IGV4cHJlc3MoKTtcclxuLy8gVE9ETzogQ09SUyBoYXJkZW5pbmdcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5hcHAub3B0aW9ucygnKicsIGNvcnMoKSk7XHJcbmFwcC5kaXNhYmxlKCdldGFnJyk7XHJcblxyXG5VU0JTZW5zb3JNYW5hZ2VyLmZhY3RvcnkoKTtcclxuXHJcbi8vIHZpZXcgZW5naW5lIHNldHVwXHJcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdwdWcnKTtcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycpKSk7XHJcblxyXG5hcHAudXNlKCcvJywgcm91dGVfaW5kZXgpO1xyXG5hcHAudXNlKCcvYXBpJywgcm91dGVfYXBpKTtcclxuYXBwLnVzZSgnL3NldHRpbmdzJywgcm91dGVfc2V0dGluZ3MpO1xyXG5cclxuLy8gY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcclxuYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgY29uc3QgZXJyOiBhbnkgPSBuZXcgRXJyb3IoJ05vdCBGb3VuZCBhdCBzZXJ2ZXInKTtcclxuICAgIGVyclsnc3RhdHVzJ10gPSA0MDQ7XHJcbiAgICBuZXh0KGVycik7XHJcbn0pO1xyXG5cclxuXHJcbi8vIGVycm9yIGhhbmRsZXJzXHJcblxyXG4vLyBkZXZlbG9wbWVudCBlcnJvciBoYW5kbGVyXHJcbi8vIHdpbGwgcHJpbnQgc3RhY2t0cmFjZVxyXG5pZiAoYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcpIHtcclxuICAgIGFwcC51c2UoKGVycjogYW55LCByZXE6IGFueSwgcmVzOiBhbnksIG5leHQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoZXJyWydzdGF0dXMnXSB8fCA1MDApO1xyXG4gICAgICAgIHJlcy5yZW5kZXIoJ2Vycm9yJywge1xyXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcclxuICAgICAgICAgICAgZXJyb3I6IGVycn0pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vIHByb2R1Y3Rpb24gZXJyb3IgaGFuZGxlclxyXG4vLyBubyBzdGFjayB0cmFjZXMgbGVha2VkIHRvIHVzZXJcclxuYXBwLnVzZSgoZXJyOiBhbnksIHJlcTogYW55LCByZXM6IGFueSwgbmV4dDogYW55KSA9PiB7XHJcbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKTtcclxuICAgIHJlcy5yZW5kZXIoJ2Vycm9yJywge1xyXG4gICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxyXG4gICAgICAgIGVycm9yOiB7fX0pO1xyXG59KTtcclxuXHJcbmFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDgwKTtcclxuXHJcbmNvbnN0IHNlcnZlcjogaHR0cC5TZXJ2ZXIgPSBhcHAubGlzdGVuKGFwcC5nZXQoJ3BvcnQnKSwgZnVuY3Rpb24oKSB7XHJcbiAgICBsb2cuaW5mbygnaVRlbXBlciBsaXN0ZW5pbmcgb24gcG9ydCAnICsgc2VydmVyLmFkZHJlc3MoKS5wb3J0KTtcclxufSk7XHJcbiJdfQ==
